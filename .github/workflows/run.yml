name: Run clipping

on:
  workflow_dispatch:
    inputs:
      url:
        description: "YouTube URL"
        required: true
      ranges:
        description: 'Semicolon ranges, e.g. "01:10-02:00;05:00-05:45"'
        required: true
      output_dir:
        description: "Output directory"
        required: false
        default: "clips/run"
      fast:
        description: "Use fast (keyframe) cuts"
        required: false
        default: "true"

jobs:
  clip:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ffmpeg and tool
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          python -m pip install --upgrade pip
          pip install .
          python -m yt_dlp --version || true

      # Optional: use cookies if provided as a repo secret (YT_COOKIES)
      - name: (Optional) write cookies & set yt-dlp flags
        env:
          COOKIES: ${{ secrets.YT_COOKIES }}
        run: |
          set -euxo pipefail
          # make yt-dlp resilient on CI
          echo 'YT_DLP_OPTS=--retries infinite --fragment-retries infinite --concurrent-fragments 1' >> "$GITHUB_ENV"
          # if a cookies secret exists, write it and expose its path
          if [ -n "${COOKIES:-}" ]; then
            printf '%s' "$COOKIES" > cookies.txt
            echo "YT_DLP_COOKIES=$PWD/cookies.txt" >> "$GITHUB_ENV"
          fi

      - name: Run clipper
        env:
          URL:    ${{ github.event.inputs.url }}
          RANGES: ${{ github.event.inputs.ranges }}
          OUTDIR: ${{ github.event.inputs.output_dir }}
          FAST:   ${{ github.event.inputs.fast }}
        run: |
          set -euxo pipefail
          ARGS=( --url "$URL" --ranges "$RANGES" --output-dir "$OUTDIR" )
          if [ "${FAST:-true}" = "true" ]; then ARGS+=( --fast ); fi
          # call via module to avoid PATH issues
          python -m clipper "${ARGS[@]}"

      - name: Zip outputs
        run: zip -r clips.zip "${{ github.event.inputs.output_dir }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: clips
          path: clips.zip
